01 - Setup TypeORM for connecting database in NestJS
    Step 01: Installation
        Install the npm package:

        npm install typeorm --save

        You need to install reflect-metadata shim:

        npm install reflect-metadata --save

        and import it somewhere in the global place of your app (for example in app.ts):

        import "reflect-metadata"

        You may need to install node typings:

        npm install @types/node --save-dev

        Install the db lib for data (used):
            for MySQL or MariaDB

            npm install mysql --save (you can install mysql2 instead as well)

            for PostgreSQL or CockroachDB

            npm install pg --save

            for SQLite

            npm install sqlite3 --save

            for Microsoft SQL Server

            npm install mssql --save

            for sql.js

            npm install sql.js --save

            for Oracle

            npm install oracledb --save

            To make the Oracle driver work, you need to follow the installation instructions from their site.

            for SAP Hana

            npm install @sap/hana-client
            npm install hdb-pool
            SAP Hana support made possible by the sponsorship of Neptune Software.

            for Google Cloud Spanner

            npm install @google-cloud/spanner --save
            Provide authentication credentials to your application code by setting the environment variable GOOGLE_APPLICATION_CREDENTIALS:

            # Linux/macOS
            export GOOGLE_APPLICATION_CREDENTIALS="KEY_PATH"

            # Windows
            set GOOGLE_APPLICATION_CREDENTIALS=KEY_PATH

            # Replace KEY_PATH with the path of the JSON file that contains your service account key.
            To use Spanner with the emulator you should set SPANNER_EMULATOR_HOST environment variable:

            # Linux/macOS
            export SPANNER_EMULATOR_HOST=localhost:9010

            # Windows
            set SPANNER_EMULATOR_HOST=localhost:9010
            for MongoDB (experimental)

            npm install mongodb@^5.2.0 --save

            for NativeScript, react-native and Cordova

            Check documentation of supported platforms

02. Install lib for type orm: $ npm install --save @nestjs/typeorm typeorm

03. Config datasource for connecting db:
    a. Create class data-source.ts:
        import {
            DataSource, DataSourceOptions
        } from 'typeorm'

        import {config} from 'dotenv'

        config();

        export const dataSourceOption:DataSourceOptions={
            type: 'postgres',
            host: process.env.DB_HOST,
            port: Number(process.env.DB_PORT),
            username: process.env.DB_USERNAME,
            password: process.env.DB_PASSWORD,
            entities: [

            ],
            migrations: [

            ],
            logging: false,
            synchronize: false,
        }

        const dataSource = new DataSource(dataSourceOption);

        export default dataSource;

04. Import data-source config on app.moudle.ts for using datasource connection
    // src/app.module.ts
    ....
    import { TypeOrmModule } from '@nestjs/typeorm';
    import { dataSourceOption } from 'db/datas-source';

    imports: [
        /**
        * Import type orm with datasoruce connected with db (datas-source.ts) for connecting database
        */
        TypeOrmModule.forRoot(dataSourceOption),
    ],
    ....

After that, run command line: npm run start:dev for testing datasource connection.
-----------------------------------------------------------------------------------------------------